// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid())
  name           String?   @db.VarChar(100)
  email          String    @unique
  password       String?
  phoneNumber    String?   @unique
  role           Role      @default(USER)
  googleId       String?   @unique
  facebookId     String?   @unique
  isActive       Boolean   @default(true)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  lastLoginAt    DateTime?
  profilePicture String?
  addresses      Address[]
}

enum Role {
  USER
  ADMIN
}

model Address {
  id      String @id @default(cuid())
  street  String
  city    String
  state   String
  zipCode String
  country String
  userId  String
  user    User   @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Category {
  id            String        @id @default(cuid())
  name          String        @unique @db.VarChar(100)
  description   String?       @db.Text
  products      Product[]
  subcategories Subcategory[]
}

model Subcategory {
  id          String    @id @default(cuid())
  name        String    @unique @db.VarChar(100)
  description String?   @db.Text
  categoryId  String
  category    Category  @relation(fields: [categoryId], references: [id])
  products    Product[]
}

model Tag {
  id       String    @id @default(cuid())
  name     String    @unique @db.VarChar(256)
  products Product[]
}

model Variant {
  id        String  @id @default(cuid())
  size      String?
  color     String?
  price     Decimal @db.Decimal(10, 2)
  productId String
  product   Product @relation(fields: [productId], references: [id])
}

model Product {
  id            String       @id @default(cuid())
  name          String       @db.VarChar(255)
  description   String?      @db.Text
  price         Decimal      @db.Decimal(10, 2)
  sku           String?      @unique
  quantity      Int          @default(0)
  images        String[]
  isActive      Boolean      @default(true)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  categoryId    String
  category      Category     @relation(fields: [categoryId], references: [id])
  subcategoryId String?
  subcategory   Subcategory? @relation(fields: [subcategoryId], references: [id])
  brand         String?      @db.VarChar(100)
  tags          Tag[]
  ratings       Rating[]
  variants      Variant[]
}

model Rating {
  id        String  @id @default(cuid())
  score     Int
  comment   String?
  productId String
  product   Product @relation(fields: [productId], references: [id])
}
